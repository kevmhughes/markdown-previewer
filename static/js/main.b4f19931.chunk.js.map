{"version":3,"sources":["sampleText.js","App.js","reportWebVitals.js","index.js"],"names":["sampleText","App","props","handleChange","event","text","target","value","setState","renderText","__html","marked","sanitize","breaks","gfm","highlight","state","localStorage","getItem","this","setItem","className","id","onChange","rows","dangerouslySetInnerHTML","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQACaA,EAAU,2yB,eCiERC,E,kDAvDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAoBRC,aAAe,SAACC,GACd,IAAMC,EAAOD,EAAME,OAAOC,MAC1B,EAAKC,SAAS,CAAEH,UAvBC,EA0BnBI,WAAa,SAACJ,GAIZ,MAAO,CAAEK,OAHMC,IAAON,EAAM,CAC1BO,UAAU,EAAMC,QAAQ,EAAMC,KAAK,EAAMC,UAAW,SA1BtD,EAAKC,MAAQ,CACXX,KAAML,GAHS,E,qDAOnB,WACE,IAAMK,EAAOY,aAAaC,QAAQ,QAC9Bb,EACFc,KAAKX,SAAS,CAAEH,SAEhBc,KAAKX,SAAS,CAAEH,KAAML,M,gCAI1B,WAAsB,IACZK,EAASc,KAAKH,MAAdX,KACRY,aAAaG,QAAQ,OAAQf,K,oBAe/B,WACE,OACE,qBAAKgB,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,0BACEC,GAAG,SACHC,SAAUJ,KAAKhB,aACfI,MAAOY,KAAKH,MAAMX,KAClBgB,UAAU,eACVG,KAAK,SAGT,qBAAKH,UAAU,WAAf,SACE,qBAAKC,GAAG,UAAUG,wBAAyBN,KAAKV,WAAWU,KAAKH,MAAMX,mB,GAhDhEqB,IAAMC,WCITC,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b4f19931.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nexport const sampleText = `# Markdown Previewer\n\n## Sub-headings\n\n### Smaller headings\n\nHere's some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction example(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nMake your text **bold**!\nOr _italic_.\nOr... **_both!_**\nAnd feel free to ~~cross text out~~.\n\nThere are also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nand tables:\n\nHeader 1 | Header 2 | Header 3\n------------ | ------------- | -------------\ncontent 1 | content 2 | content 3\ncontent 1 | content 2 | content 3\n\n- and of course there are lists.\n\n1. there are also numbered lists, and you can embed images, too.\n![React Logo w/ Text](https://commonmark.org/help/images/favicon.png)\n`;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/no-danger */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport marked from 'marked';\nimport { sampleText } from './sampleText';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: sampleText,\n    };\n  }\n\n  componentDidMount() {\n    const text = localStorage.getItem('text');\n    if (text) {\n      this.setState({ text });\n    } else {\n      this.setState({ text: sampleText });\n    }\n  }\n\n  componentDidUpdate() {\n    const { text } = this.state;\n    localStorage.setItem('text', text);\n  }\n\n  handleChange = (event) => {\n    const text = event.target.value;\n    this.setState({ text });\n  }\n\n  renderText = (text) => {\n    const __html = marked(text, {\n      sanitize: true, breaks: true, gfm: true, highlight: null,\n    });\n    return { __html };\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <textarea\n              id=\"editor\"\n              onChange={this.handleChange}\n              value={this.state.text}\n              className=\"form-control\"\n              rows=\"35\"\n            />\n          </div>\n          <div className=\"col-sm-6\">\n            <div id=\"preview\" dangerouslySetInnerHTML={this.renderText(this.state.text)} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}